name: Simple CI/CD Pipeline

on:
  push:
    branches: [main, develop, restructure/repository]
  pull_request:
    branches: [main, develop]

jobs:
  # Basic Quality Checks
  quality:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Prettier check
        run: npm run format:check

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npm run type-check

  # Build Test
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build:prod

      - name: Check build output
        run: |
          echo "Build completed successfully!"
          echo "Build size:"
          du -sh dist/
          echo "Main files:"
          ls -la dist/

  # Unit Tests (Optional - only if they pass)
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm run test:run
        continue-on-error: true

  # Final Status
  status:
    needs: [quality, build]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Check job status
        run: |
          echo "Quality check: ${{ needs.quality.result }}"
          echo "Build check: ${{ needs.build.result }}"
          
          if [[ "${{ needs.quality.result }}" == "success" && "${{ needs.build.result }}" == "success" ]]; then
            echo "✅ All critical checks passed!"
            exit 0
          else
            echo "❌ Some critical checks failed"
            exit 1
          fi